@using FunFactor.Client.Components.Shared.Svg.Icons
<div class="relative z-50@_modalClass" aria-labelledby="modal-title" role="dialog" aria-modal="true">

    <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity"></div>

    <div class="fixed inset-0 top-16 overflow-y-auto">
        <div class="flex items-end sm:items-center justify-center min-h-full p-4 text-center  sm:p-0">

            <div class="relative bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all mx-7 w-full md:w-1/2 xl:w-1/3 my-5">

                <div class="text-xl font-semibold text-gf-black mb-4">
                    @Title
                </div>
                <div class="mb-2">
                    @if (ChildContent != null)
                    {
                        @ChildContent
                    }
                </div>
                <div>
                    @if (Buttons != null)
                    {
                        @Buttons
                    }
                </div>

                <div class="absolute right-4 top-5">
                    <button class="" @onclick="() => Show = false">
                        <SvgIcon_Cross class="h-6 w-6 fill-black"></SvgIcon_Cross>
                    </button>
                </div>

            </div>
        </div>

    </div>
</div>

@code {
    private string _modalClass => Show ? string.Empty : " hidden";

    [Parameter]
    public bool Show { get; set; } = false;

    [Parameter]
    public string? Title { get; set; }

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [Parameter]
    public RenderFragment? Buttons { get; set; }

}
